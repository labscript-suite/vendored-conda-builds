name: Make and upload Conda packages

on:
  push:
    branches:
      - master
  create:
    tags:
      - '*'
  schedule:
    # - cron: '0-59/5 * * * *' # Every 5 minutes
    - cron: '0 00 * * 0' # Weekly, 12AM Sundays UTC


defaults:
  run:
    shell: bash

env:
  ANACONDA_USER: labscript-suite

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - { os: ubuntu-latest,   python: 3.8,  arch: x64 }
          # - { os: ubuntu-latest,   python: 3.7,  arch: x64 }
          # - { os: ubuntu-latest,   python: 3.6,  arch: x64 }

          # - { os: macos-latest,    python: 3.8,  arch: x64 }
          # - { os: macos-latest,    python: 3.7,  arch: x64 }
          # - { os: macos-latest,    python: 3.6,  arch: x64 }

          - { os: windows-latest,  python: 3.8,  arch: x64 }
          - { os: windows-latest,  python: 3.7,  arch: x64 }
          - { os: windows-latest,  python: 3.6,  arch: x64 }

          - { os: windows-latest,  python: 3.8,  arch: x86 }
          - { os: windows-latest,  python: 3.7,  arch: x86 }
          - { os: windows-latest,  python: 3.6,  arch: x86 }

    if: github.repository == 'labscript-suite/vendored-conda-builds' && (github.event_name != 'create' || github.event.ref_type != 'branch' || github.event_name == 'schedule')
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Checkout latest tag
        if: github.event_name == 'schedule'
        run: git checkout $(git describe --tags `git rev-list --tags --max-count=1`)

      - name: Set BUILD_NOARCH=true
        if: strategy.job-index == 0
        run: echo "BUILD_NOARCH=true" >> $GITHUB_ENV

      - name: Install Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python }}
          architecture: ${{ matrix.arch }}
          miniconda-version: "latest"
          
      - name: Conda package (Unix)
        if: runner.os != 'Windows'
        shell: bash -l {0}
        run: |
          conda install -c labscript-suite setuptools-conda
          python make_packages.py ${{ runner.temp }}

      - name: Conda Package (Windows)
        if: runner.os == 'Windows'
        shell: cmd /C CALL {0}
        run: |
          conda install -c labscript-suite setuptools-conda && ^
          python make_packages.py ${{ runner.temp }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: conda_packages
          path: ./conda_packages

  upload:
    name: Upload
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download Artifact
      uses: actions/download-artifact@v2
      with:
        name: conda_packages
        path: ./conda_packages

    - name: Install Miniconda and cloud client
      run: |
        curl -LO https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh 
        bash Miniconda3-latest-Linux-x86_64.sh -b -p .miniconda
        source .miniconda/etc/profile.d/conda.sh
        conda activate
        conda install anaconda-client

    # - name: Publish to Anaconda test label
    #   if: github.event.ref_type != 'tag' && github.event_name != 'schedule'
    #   run: |
    #     source .miniconda/etc/profile.d/conda.sh
    #     conda activate
    #     anaconda \
    #       --token ${{ secrets.ANACONDA_API_TOKEN }} \
    #       upload \
    #       --user $ANACONDA_USER \
    #       --label test \
    #       --skip-existing \
    #       conda_packages/*/*

    - name: Publish to Anaconda main label
      if: github.event.ref_type == 'tag' || github.event_name == 'schedule'
      run: |
        source .miniconda/etc/profile.d/conda.sh
        conda activate
        anaconda \
          --token ${{ secrets.ANACONDA_API_TOKEN }} \
          upload \
          --user $ANACONDA_USER \
          --skip-existing \
          conda_packages/*/*
