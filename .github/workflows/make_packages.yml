name: Make and upload Conda packages

on:
  push:
    branches:
      - master
    tags:
      - '*'
  schedule:
    # - cron: '0-59/5 * * * *' # Every 5 minutes
    - cron: '0 02 * * 0' # Weekly, 2AM Sundays UTC

env:
  ANACONDA_USER: labscript-suite

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { os: ubuntu-latest,   python: '3.12',  arch: x64}
          # - { os: ubuntu-latest,   python: '3.10',  arch: x64 }
          # - { os: ubuntu-latest,   python: '3.9',  arch: x64 }
          # - { os: ubuntu-latest,   python: '3.8',  arch: x64 }
          # - { os: ubuntu-latest,   python: '3.7',  arch: x64 }

          # - { os: macos-11,    python: '3.11',  arch: x64 }
          # - { os: macos-11,    python: '3.10',  arch: x64 }
          # - { os: macos-11,    python: '3.9',  arch: x64 }
          # - { os: macos-11,    python: '3.8',  arch: x64 }
          # - { os: macos-11,    python: '3.7',  arch: x64 }

          #- { os: windows-latest,  python: '3.13',  arch: x64 } conda-build<25 not available here
          - { os: windows-latest,  python: '3.12',  arch: x64 }
          - { os: windows-latest,  python: '3.11',  arch: x64 }
          - { os: windows-latest,  python: '3.10',  arch: x64 }
          - { os: windows-latest,  python: '3.9',  arch: x64 }

    if: github.repository == 'labscript-suite/vendored-conda-builds'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout latest tag
        if: github.event_name == 'schedule'
        shell: bash -l {0}
        run: git checkout $(git describe --tags `git rev-list --tags --max-count=1`)

      - name: Set BUILD_NOARCH=true
        if: strategy.job-index == 0
        shell: bash -l {0}
        run: echo "BUILD_NOARCH=true" >> $GITHUB_ENV

      - name: Install Miniforge
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: "latest"
          auto-update-conda: true
          conda-remove-defaults: true
          python-version: ${{ matrix.python }}
          architecture: ${{ matrix.arch }}
          activate-environment: true

      - name: Conda package (Unix)
        if: runner.os != 'Windows'
        shell: bash -l {0}
        run: |
          conda install -c labscript-suite setuptools-conda "conda-build<25"
          python make_packages.py ${{ runner.temp }}

      - name: Conda Package (Windows)
        if: runner.os == 'Windows'
        shell: cmd /C CALL {0}
        run: |
          conda install -c labscript-suite setuptools-conda "conda-build<25" && ^
          python make_packages.py ${{ runner.temp }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: conda_packages-${{ matrix.os }}-py${{ matrix.python}}-${{ matrix.arch }}
          path: ./conda_packages

  upload:
    name: Upload
    runs-on: ubuntu-latest
    needs: build
    steps:
      
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          pattern: conda_packages-*
          path: ./conda_packages
          merge-multiple: true

      - name: Install Miniforge
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: "latest"
          auto-update-conda: true
          conda-remove-defaults: true
          auto-activate-base: true
          activate-environment: ""

      - name: Install Anaconda cloud client
        shell: bash -l {0}
        run: conda install anaconda-client

      # - name: Publish to Anaconda test label
      #   if: github.event.ref_type != 'tag' && github.event_name != 'schedule'
      #   shell: bash -l {0}
      #   run: |
      #     anaconda \
      #       --token ${{ secrets.ANACONDA_API_TOKEN }} \
      #       upload \
      #       --user $ANACONDA_USER \
      #       --label test \
      #       --skip-existing \
      #       conda_packages/*/*

      - name: Publish to Anaconda main label
        if: (github.event_name == 'push' && contains(github.ref, '/tags')) || github.event_name == 'schedule'
        shell: bash -l {0}
        run: |
          anaconda \
            --token ${{ secrets.ANACONDA_API_TOKEN }} \
            upload \
            --user $ANACONDA_USER \
            --skip-existing \
            conda_packages/*/*
